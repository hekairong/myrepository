/** 
 * <pre>项目名称:education-provider 
 * 文件名称:EduServiceWS.java 
 * 包名:com.jk.service 
 * 创建日期:2018年10月29日下午5:01:49 
 * Copyright (c) 2018, yuxy123@gmail.com All Rights Reserved.</pre> 
 */  
package com.jk.service;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.multipart.MultipartFile;

import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import com.alibaba.fastjson.JSONObject;
import com.jk.mapper.IeduDaoWS;
import com.jk.model.WSmodel;

import com.jk.mapper.yunschool.YunSchoolMapper;
import com.jk.model.helpteacher.HelpTeacher;
import com.jk.model.student.Student;
import com.jk.model.subject.Subject;
import com.jk.model.teacher.Teacher;
import com.jk.model.Course;
import com.jk.model.Org;
import com.jk.model.StuTree;
import com.jk.model.User;
import com.jk.model.tree.Tree;
import com.jk.model.yunschool.YunSchool;
import com.jk.model.zwt.ZwtUser;
import com.mongodb.gridfs.GridFSDBFile;
import com.mysql.fabric.xmlrpc.base.Array;
import com.mongodb.gridfs.GridFSDBFile;

/** 
 * <pre>项目名称：education-provider    
 * 类名称：EduServiceWS    
 * 类描述：    
 * 创建人：王硕 3190552680@qq.com    
 * 创建时间：2018年10月29日 下午5:01:49    
 * 修改人：王硕 3190552680@qq.com  
 * 修改时间：2018年10月29日 下午5:01:49    
 * 修改备注：       
 * @version </pre>    
 */
public class EduServiceWS implements IeduService {
	
	@Autowired
	private YunSchoolMapper yunSchoolMapper;

	@Autowired IeduDaoWS ieduDaoWS;
	
	//测试链接
	@Override
	public String test() {

		String ff = "哈哈";
		
		return ff;
	}
	
	//
	@Override
	public List<Tree> queryTeacherTree(String userid) {
		List<Tree> treeAll =recursionTreed("0",userid);
		System.out.println(treeAll);
		return treeAll;
	}
	
	private List<Tree> recursionTreed(String pid, String userid) {
		//根据id查询子节点列表
        List<Tree> trees = yunSchoolMapper.recursionTree(pid,userid);
        //判断查询到数据，则循环操作
        if(trees != null && trees.size()>0){
            for (int i = 0; i < trees.size(); i++) {
                //根据当前节点id查询新的子集列表，
                List<Tree> trees2 = recursionTreed(trees.get(i).getId().toString(),userid);
//              将列表set到当前树节点对象中
                trees.get(i).setNodes(trees2);
            }
        }
        return trees;
	}

	//登录
	@Override
	public HashMap<String, Object> getLogin(String username, String userpassword) {

		HashMap<String, Object> mmp = new HashMap<String, Object>();
		String hh = "";
		
		WSmodel list1 = ieduDaoWS.getLogin1(username);
		
		if(list1!=null){
			String userpassword2 = list1.getUserpassword();
			System.out.println(userpassword2);
			if(userpassword.equals(userpassword2)){
				
				hh = "1";
				
				mmp.put("user", list1);
				mmp.put("n", hh);
				
				return mmp;
				
			}else{
				
				hh = "2";
				mmp.put("user", null);
				mmp.put("n", hh);
				
				return mmp;
				
			}
			
		}else{
			
			hh = "3";
			mmp.put("user", null);
			mmp.put("n", hh);
			
			return mmp;
			
		}

	}

	

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#addClassRoom(com.jk.model.yunschool.YunSchool)    
	 */
	@Override
	public void addClassRoom(YunSchool yunschool) {
		
		String uuidstring = UUID.randomUUID().toString();
		yunschool.setClassroomid(uuidstring);
        String classroomstudent = yunschool.getClassroomstudent();
        String[] split = classroomstudent.split(",");
        for (int i = 0; i < split.length; i++) {
        	String uuidstring1 = UUID.randomUUID().toString();
			
        	yunSchoolMapper.addclassstu(uuidstring1,uuidstring,split[i]);
		}
		yunSchoolMapper.addClassRoom(yunschool);
		
	}

	//
	@Override
	public Map<String, Object> findclass(Integer pageSize, Integer start,String classroomname,String classroomproject) {
		List<WSmodel> list = ieduDaoWS.findclass(pageSize,start,classroomname,classroomproject);
		Integer gg = ieduDaoWS.findtotal(classroomname,classroomproject);
		Map<String, Object> mmp = new HashMap<>();
		mmp.put("rows", list);
		mmp.put("total", gg);
		return mmp;
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#querySubjectList()    
	 */
	@Override
	public List<Subject> querySubjectList() {
		return yunSchoolMapper.querySubjectList();
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#queryTeacherList()    
	 */
	@Override
	public List<Teacher> queryTeacherList() {
		return yunSchoolMapper.queryTeacherList();
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#queryHelpTeacherList()    
	 */
	@Override
	public List<HelpTeacher> queryHelpTeacherList() {
		return yunSchoolMapper.queryHelpTeacherList();
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#queryStudentList()    
	 */
	@Override
	public List<Student> queryStudentList() {
		return yunSchoolMapper.queryStudentList();
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#myCloudSchool(com.jk.model.yunschool.YunSchool)    
	 */
	@Override
	public List<YunSchool> myCloudSchool(YunSchool yunschool) {
		return yunSchoolMapper.myCloudSchool(yunschool);
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#queryYunSchoolById(com.jk.model.yunschool.YunSchool)    
	 */
	@Override
	public YunSchool queryYunSchoolById(YunSchool yunschool) {
		return yunSchoolMapper.queryYunSchoolById(yunschool);
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#queryYunSchoolPage(com.jk.model.yunschool.YunSchool)    
	 */
	@Override
	public List<YunSchool> queryYunSchoolPage(YunSchool yunschool) {
		return yunSchoolMapper.queryYunSchoolPage();
	}


	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#selectcourse()    
	 */
	@Override
	public List<Course> selectcourse(String uerid) {
		
		return yunSchoolMapper.selectcourse(uerid);
	}
	
	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#selectTree()    
	 */
	@Override
	public List<StuTree> selectTree() {
	
//		String id="0";
//		return getNodes(id);
		return yunSchoolMapper.selectTree();
	}

	/* (non-Javadoc)    
	 * @see com.jk.service.IeduService#queryType()    
	 */
	@Override
	public List queryType() {
		
		List list = ieduDaoWS.queryType();
		
		return list;
	}
	
	//
	@Override
	public JSONObject queryUserList(ZwtUser user, Integer offset, Integer limit) {
		JSONObject json =new JSONObject();
		Long count =ieduDaoWS.queryUserCount(user);
		List<ZwtUser> users=ieduDaoWS.queryUserList(user,offset,limit);
		json.put("total", count);
		json.put("rows",users);
		return json;
	}

	//
	@Override
	public ZwtUser queryOneUser(ZwtUser user) {
		ZwtUser users = ieduDaoWS.queryOneUser(user);
		return users;
	}

	//
	@Override
	public void updateUser(ZwtUser user) {
		ieduDaoWS.updateUser(user);
	}

	//
	@Override
	public void deleteUser(ZwtUser user) {
		ieduDaoWS.deleteUser(user);
	}

	//管理员删除课程
	@Override
	public void delclass(String classroomid) {
		
		ieduDaoWS.delclass(classroomid);
		
	}

	//管理员审核课程
	@Override
	public void updateclass(String classroomid) {

		ieduDaoWS.updateclass(classroomid);
		
	}

	//
	@Override
	public List<Course> querycoursebystudentid(String studentid) {
		return yunSchoolMapper.querycoursebystudentid(studentid);
	}

	//
	@Override
	public User queryUserEntityByuserid(String userid) {
		return yunSchoolMapper.queryUserEntityByuserid(userid);
	}

	//
	@Override
	public int addorg(Org org) {
		return 0;
	}

	//
	@Override
	public void addstudent(Student student) {
		yunSchoolMapper.addstudent(student);
	}

	//
	@Override
	public void addteacher(Teacher teacher) {
		yunSchoolMapper.addteacher(teacher);
	}

	//
	@Override
	public void adduser(User user) {
		yunSchoolMapper.adduser(user);
	}

	//
	@Override
	public HashMap<String, Object> ImgUpload(MultipartFile file) {
		// TODO Auto-generated method stub
		return null;
	}

	//
	@Override
	public GridFSDBFile findImgById(String id) {
		// TODO Auto-generated method stub
		return null;
	}

	//
	@Override
	public List<String> findChart() {
		
		return yunSchoolMapper.findChart();
	}

	//
	@Override
	public List<LinkedHashMap<String, Object>> findChartUser() {
		// TODO Auto-generated method stub
		return null;
	}
}
